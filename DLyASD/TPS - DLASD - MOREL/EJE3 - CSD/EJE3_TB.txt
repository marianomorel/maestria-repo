`timescale 1ns / 1ps

module tb_csdigit;


reg signed [16:0] a;
reg clk;
reg rst;


wire signed [15:0] c;


csdigit uut (
    .a(a),
    .clk(clk),
    .rst(rst),
    .c(c)
);


initial begin
    clk = 0;
    forever #5 clk = ~clk; 
end


initial begin
    $dumpfile("dump.vcd"); 
    $dumpvars(0, tb_csdigit); 

   
    a = 0;
    rst = 1;
    #10 rst = 0; 

    
    #10 a = 17'sb0000_0000_0000_0001; 
    #10 a = 17'sb1111_1111_1111_1111;
    #10 a = 17'sb0111_1111_1111_1111; 
    #10 a = 17'sb1000_0000_0000_0000;
    #10 a = 17'sb0001_0101_1010_1101; 
    #10 a = 17'sb1110_1010_0101_0011; 
    #10;

    
    #20 $finish;
end

endmodule

module tb_bmul;


reg signed [15:0] m;
reg signed [16:0] q;
reg clk;
reg rst;


wire signed [31:0] p;


bmul uut (
    .m(m),
    .q(q),
    .clk(clk),
    .rst(rst),
    .p(p)
);


initial begin
    clk = 0;
    forever #5 clk = ~clk; 
end

// Test stimulus
initial begin
    $dumpfile("dump.vcd"); 
    $dumpvars(0, tb_bmul); 

    
    m = 0;
    q = 0;
    rst = 1;
    #10 rst = 0; 

    
    #10 m = 16'sb0000_0000_0000_0001; q = 17'sb0000_0000_0000_0001; 
    #10 m = 16'sb1111_1111_1111_1111; q = 17'sb1111_1111_1111_1111; 
    #10 m = 16'sb0111_1111_1111_1111; q = 17'sb0111_1111_1111_1111; 
    #10 m = 16'sb1000_0000_0000_0000; q = 17'sb1000_0000_0000_0000;
    #10 m = 16'sb0001_0101_1010_1101; q = 17'sb0001_0101_1010_1101; 
    #10 m = 16'sb1110_1010_0101_0011; q = 17'sb1110_1010_0101_0011; 
    #10;

   
    #20 $finish;
end

endmodule
